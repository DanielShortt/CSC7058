// DAZ Studio version 4.15.0.30 filetype DAZ Script
/*

/////////////////////////
//LOADING THE SCENE FILES
/////////////////////////


oCM = App.getContentMgr();

oCM.openFile( "C:/Daz 3D/Applications/Data/DAZ 3D/My DAZ 3D Library/Scene Builder/Starter Essentials/Alchemy Chasm.duf", true ); 
oCM.openFile( "C:/Daz 3D/Applications/Data/DAZ 3D/My DAZ 3D Library/People/Genesis 8 Male/Genesis 8 Basic Male.duf", true ); 
oCM.openFile( "C:/Daz 3D/Applications/Data/DAZ 3D/My DAZ 3D Library/People/Genesis 8 Male/Poses/Base Poses/Base Pose Kneeling B.duf", true );  
oCM.openFile( "C:/Daz 3D/Applications/Data/DAZ 3D/My DAZ 3D Library/Scene Builder/Starter Essentials/Dusk Lights.duf", true ); 
oCM.openFile( "C:/Daz 3D/Applications/Data/DAZ 3D/My DAZ 3D Library/People/Genesis 8 Male/Clothing/Basic Wear/Basic Wear Boxers.duf", true );
oCM.openFile( "C:/Daz 3D/Applications/Data/DAZ 3D/My DAZ 3D Library/People/Genesis 8 Male/Clothing/Basic Wear/Basic Wear T Shirt.duf", true );
oCM.openFile( "C:/Daz 3D/Applications/Data/DAZ 3D/My DAZ 3D Library/Runtime/Libraries/Props/ART_LoadingDock/WallBack.pp2", true );
oCM.openFile( "C:/Daz 3D/Applications/Data/DAZ 3D/My DAZ 3D Library/Camera Presets/CamerasTest.duf", true );


/////////////////////////
//MOVING THE BACKGROUND
/////////////////////////


var roots = Scene.getNodeList();

var itemBg=Scene.findNodeByLabel( "AC_SFWBack" )

if (itemBg){
	itemBg.select(true);
	//MessageBox.information("Head Selected.","","");

	//Change the XPos to ZPos or YPos	to translate in different direction
	
	if( itemBg )
		itemBg.getZPosControl().setValue( itemBg.getZPosControl().getValue() -900 );
	
}


/////////////////////////
//SETTING THE Afraid HD VALUE
/////////////////////////


//Checking if a named node exists
var selNode=Scene.findNodeByLabel( "Genesis 8 Male" )

//selecting this node
if (selNode){
	selNode.select(true);
}


//Naming a parameter to change
var propUpdate = ["Happy HD"];

//the value the parameter is to be set
var updateValue = .75;

//getting the node list of the scene
var sceneNodeList = Scene.getNodeList();

//cycling through node list
for (i=0; i < sceneNodeList.length; i++)
{
	var selNode = sceneNodeList[i];
	// we're only interested in the selected node
	if ( selNode.isSelected() )
	{
		//print( selNode.getLabel() ); // for debug tracing

		// aquire the list of properties belongint to this node
		var nodePropList = selNode.getPropertyList();
		for (j=0; j < nodePropList.length; j++)
		{
			var selProp = nodePropList[j];
			// aquire the label of this property
			var sPropLabel = selProp.getLabel();
			//print( sPropLabel ); // for debug tracing
				
			// Does this property belong to the list of props we want?
			for (x=0; x< propUpdate.length; x++)
			{
				
				if ( sPropLabel == propUpdate[x] )
				{
					print( sPropLabel ); // for debug tracing
					// The property's Class will give us the data type we need
					var sClass = selProp.getWidgetClass();
					//print( sClass );
						
					// we need the class for the PropertySettings object
					if ( sClass == "DzStyledFloatPropertyWgt" )					
					{
						selProp.setDoubleValue( updateValue );
					}
				} 
			} 
		}	
	}
}

//////////////////////////////////////////////////////

var cameras = new Array();


/*


cameras[0] = "DzCamera.FRONT_CAMERA"; 
cameras[1] = "DzCamera.BACK_CAMERA";
cameras[2] = "DzCamera.LEFT_CAMERA";
cameras[3] = "DzCamera.RIGHT_CAMERA";
cameras[4] = "DzCamera.TOP_CAMERA";
cameras[5] = "DzCamera.BOTTOM_CAMERA";
cameras[6] = "DzCamera.PERSPECTIVE_CAMERA";
cameras[7] = "DzCamera.ORTHO_CAMERA";
cameras[8] = "DzCamera.GENERAL_CAMERA";

for( var i = 0; i < cameras.length; i++ ){
	
	tempCam = cameras[i];
	print(tempCam);
	
  	/////////////////////////
	//SELECTING CAMERA FOR SCENE 
	/////////////////////////		
			
	var oCam = new DzBasicCamera()
	oCam.setName( "Cam"+ i );
		sleep( 1000 );
	oCam.setType(tempCam);
		sleep( 1000 );
	Scene.addNode( oCam );

}

*/

	var oRenderMgr = App.getRenderMgr();
	var renderSettings = oRenderMgr.getRenderOptions();

    //store renderSettings
    var bCurrentFrameRender = renderSettings.isCurrentFrameRender;
    var eRenderToId = renderSettings.renderImgToId;
    
    //get render file info from render setting
    var renderFilename = renderSettings.renderImgFilename;
    var renderFileInfo = new DzFileInfo( renderFilename );

    //change render settings
    renderSettings.isCurrentFrameRender = true;
    renderSettings.renderImgToId = renderSettings.DirectToFile;

for( var i = 0; i < 8; i++ ){
	
	sleep( 1000 );

	var oViewport = MainWindow.getViewportMgr().getActiveViewport(); 
	var oCamera = oViewport.get3DViewport().setCamera("Cam"+i);

	/////////////////////////
	//SETTING RENDER SETTINGS AND IMPLEMENTING RENDER
	/////////////////////////
	
    //set image path and name

   	renderSettings.renderImgFilename= "";  
    renderSettings.renderImgFilename = renderFileInfo.absolutePath() + "/" + renderFileInfo.completeBaseName() + "VSCTest243" + i +"." + renderFileInfo.extension();

	oRenderMgr.doRender();
					
}	

/////////////////////////
//CLOSING DAZ STUDIO 
/////////////////////////

//Close daz option 1
//var oAction;
//	var mWindow = MainWindow;
//	var oAM = mWindow.getActionMgr();
//	var oAction = oAM.findAction("DzExitAction");
//	Scene.clear();
//	oAction.trigger();

//Close daz option 2
Scene.clear();
MainWindow.close();
*/